{
	"name": "dp-500-adventureworks",
	"properties": {
		"activities": [
			{
				"name": "ForEachSqlTableName",
				"type": "ForEach",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@variables('sqlTableNames')",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy data from SQL to Parquet",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "AzureSqlTable",
									"type": "DatasetReference",
									"parameters": {
										"tableName": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DataLake_FileContainer_AllFiles_dp500",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Copy data from SQL to CSV",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "AzureSqlTable",
									"type": "DatasetReference",
									"parameters": {
										"tableName": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DataLake_FileContainer_AllFiles_dp500",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Copy data from SQL to JSON",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "AzureSqlTable",
									"type": "DatasetReference",
									"parameters": {
										"tableName": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DataLake_FileContainer_AllFiles_dp500",
									"type": "DatasetReference"
								}
							]
						}
					]
				}
			}
		],
		"variables": {
			"sqlTableNames": {
				"type": "Array",
				"defaultValue": [
					"[SalesLT].[Customer]",
					"[SalesLT].[ProductModel]",
					"[SalesLT].[ProductDescription]",
					"[SalesLT].[Product]",
					"[SalesLT].[ProductModelProductDescription]",
					"[SalesLT].[ProductCategory]",
					"[SalesLT].[Address]",
					"[SalesLT].[CustomerAddress]",
					"[SalesLT].[SalesOrderDetail]",
					"[SalesLT].[SalesOrderHeader]"
				]
			}
		},
		"folder": {
			"name": "dp-500/00-Setup"
		},
		"annotations": []
	}
}