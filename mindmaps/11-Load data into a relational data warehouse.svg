<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="518px" preserveAspectRatio="none" style="width:1667px;height:518px;background:#FFFFFF;" version="1.1" viewBox="0 0 1667 518" width="1667px" zoomAndPan="magnify"><defs/><g><rect fill="none" height="47.7344" id="_title" style="stroke:none;stroke-width:1.0;" width="738" x="463" y="15"/><a href="https://learn.microsoft.com/training/modules/load-optimize-data-into-relational-data-warehouse" target="_top" title="https://learn.microsoft.com/training/modules/load-optimize-data-into-relational-data-warehouse" xlink:actuate="onRequest" xlink:href="https://learn.microsoft.com/training/modules/load-optimize-data-into-relational-data-warehouse" xlink:show="new" xlink:title="https://learn.microsoft.com/training/modules/load-optimize-data-into-relational-data-warehouse" xlink:type="simple"><text fill="#0000FF" font-family="sans-serif" font-size="30" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="104" x="468" y="51.1426">Module</text></a><text fill="#000000" font-family="sans-serif" font-size="30" font-weight="bold" lengthAdjust="spacing" textLength="624" x="572" y="51.1426">: Load data into a relational data warehouse</text><rect fill="#091F2C" height="37.6094" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:3.0;" width="123" x="10" y="268.707"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="20" y="293.2402">Data warehouse</text><rect fill="#FFB900" height="37.6094" rx="12.5" ry="12.5" style="stroke:#FFB900;stroke-width:3.0;" width="148" x="183" y="79.3438"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="193" y="103.877">Load staging tables</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="384" y="84.2676">Creating staging tables</text><path d="M331,98.1484 L341,98.1484 C356,98.1484 356,78.5391 371,78.5391 L381,78.5391 " fill="none" style="stroke:#FFB900;stroke-width:3.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="384" y="103.877">Using the COPY command</text><path d="M331,98.1484 L341,98.1484 C356,98.1484 356,98.1484 371,98.1484 L381,98.1484 " fill="none" style="stroke:#FFB900;stroke-width:3.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="384" y="123.4863">Using external tables</text><path d="M331,98.1484 L341,98.1484 C356,98.1484 356,117.7578 371,117.7578 L381,117.7578 " fill="none" style="stroke:#FFB900;stroke-width:3.0;"/><path d="M133,287.5117 L143,287.5117 C158,287.5117 158,98.1484 173,98.1484 L183,98.1484 " fill="none" style="stroke:#181818;stroke-width:3.0;"/><rect fill="#F4364C" height="37.6094" rx="12.5" ry="12.5" style="stroke:#F4364C;stroke-width:3.0;" width="170" x="183" y="137.5625"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="193" y="162.0957">Load dimension tables</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="294" x="406" y="152.291">Using a CREATE TABLE AS (CTAS) statement</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="902" x="753" y="152.291">You can't use IDENTITY to generate a unique integer value for the surrogate key when using a CTAS statement. Use ROW_NUMBER() instead.</text><path d="M700,146.5625 L710,146.5625 C725,146.5625 725,146.5625 740,146.5625 L750,146.5625 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M353,156.3672 L363,156.3672 C378,156.3672 378,146.5625 393,146.5625 L403,146.5625 " fill="none" style="stroke:#F4364C;stroke-width:3.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="406" y="171.9004">Using an INSERT statement</text><path d="M353,156.3672 L363,156.3672 C378,156.3672 378,166.1719 393,166.1719 L403,166.1719 " fill="none" style="stroke:#F4364C;stroke-width:3.0;"/><path d="M133,287.5117 L143,287.5117 C158,287.5117 158,156.3672 173,156.3672 L183,156.3672 " fill="none" style="stroke:#181818;stroke-width:3.0;"/><rect fill="#C5B4E3" height="37.6094" rx="12.5" ry="12.5" style="stroke:#C5B4E3;stroke-width:3.0;" width="196" x="183" y="195.1719"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172" x="193" y="219.7051">Load time dimension tables</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="444" x="432" y="209.9004">Generate a sequence of time dimension values based on a date grain.</text><path d="M379,213.9766 L389,213.9766 C404,213.9766 404,204.1719 419,204.1719 L429,204.1719 " fill="none" style="stroke:#C5B4E3;stroke-width:3.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="281" x="432" y="229.5098">Scripting this in SQL may be time-consuming</text><path d="M379,213.9766 L389,213.9766 C404,213.9766 404,223.7813 419,223.7813 L429,223.7813 " fill="none" style="stroke:#C5B4E3;stroke-width:3.0;"/><path d="M133,287.5117 L143,287.5117 C158,287.5117 158,213.9766 173,213.9766 L183,213.9766 " fill="none" style="stroke:#181818;stroke-width:3.0;"/><rect fill="#E1D3C7" height="37.6094" rx="12.5" ry="12.5" style="stroke:#E1D3C7;stroke-width:3.0;" width="234" x="183" y="303.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="210" x="193" y="327.5566">Load slowly changing dimensions</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="199" x="470" y="249.1191">Type 0 (data can't be changed)</text><path d="M417,321.8281 L427,321.8281 C442,321.8281 442,243.3906 457,243.3906 L467,243.3906 " fill="none" style="stroke:#E1D3C7;stroke-width:3.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="470" y="268.7285">Type 1 (in-place update)</text><path d="M417,321.8281 L427,321.8281 C442,321.8281 442,263 457,263 L467,263 " fill="none" style="stroke:#E1D3C7;stroke-width:3.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="270" x="470" y="288.3379">Type 2 (updates are inserted as new rows)</text><path d="M417,321.8281 L427,321.8281 C442,321.8281 442,282.6094 457,282.6094 L467,282.6094 " fill="none" style="stroke:#E1D3C7;stroke-width:3.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="470" y="307.9473">Type 3 (add new attribute)</text><path d="M417,321.8281 L427,321.8281 C442,321.8281 442,302.2188 457,302.2188 L467,302.2188 " fill="none" style="stroke:#E1D3C7;stroke-width:3.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="470" y="327.5566">Type 4 (add history table)</text><path d="M417,321.8281 L427,321.8281 C442,321.8281 442,321.8281 457,321.8281 L467,321.8281 " fill="none" style="stroke:#E1D3C7;stroke-width:3.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="276" x="470" y="347.166">Type 5 (add history table and new attribute)</text><path d="M417,321.8281 L427,321.8281 C442,321.8281 442,341.4375 457,341.4375 L467,341.4375 " fill="none" style="stroke:#E1D3C7;stroke-width:3.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="210" x="470" y="366.7754">Type 6 (combine type 1, 2 and 3)</text><path d="M417,321.8281 L427,321.8281 C442,321.8281 442,361.0469 457,361.0469 L467,361.0469 " fill="none" style="stroke:#E1D3C7;stroke-width:3.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="280" x="470" y="386.3848">Combining INSERT and UPDATE statements</text><path d="M417,321.8281 L427,321.8281 C442,321.8281 442,380.6563 457,380.6563 L467,380.6563 " fill="none" style="stroke:#E1D3C7;stroke-width:3.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="470" y="405.9941">Using a MERGE statement</text><path d="M417,321.8281 L427,321.8281 C442,321.8281 442,400.2656 457,400.2656 L467,400.2656 " fill="none" style="stroke:#E1D3C7;stroke-width:3.0;"/><path d="M133,287.5117 L143,287.5117 C158,287.5117 158,321.8281 173,321.8281 L183,321.8281 " fill="none" style="stroke:#181818;stroke-width:3.0;"/><rect fill="#07641D" height="37.6094" rx="12.5" ry="12.5" style="stroke:#07641D;stroke-width:3.0;" width="129" x="183" y="401.0703"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="193" y="425.6035">Load fact tables</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="244" x="365" y="425.6035">Load fact tables after dimension tables</text><path d="M312,419.875 L322,419.875 C337,419.875 337,419.875 352,419.875 L362,419.875 " fill="none" style="stroke:#07641D;stroke-width:3.0;"/><path d="M133,287.5117 L143,287.5117 C158,287.5117 158,419.875 173,419.875 L183,419.875 " fill="none" style="stroke:#181818;stroke-width:3.0;"/><rect fill="#0078D4" height="37.6094" rx="12.5" ry="12.5" style="stroke:#0078D4;stroke-width:3.0;" width="214" x="183" y="458.6797"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="193" y="483.2129">Perform post load optimization</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="450" y="473.4082">Rebuild indexes</text><path d="M397,477.4844 L407,477.4844 C422,477.4844 422,467.6797 437,467.6797 L447,467.6797 " fill="none" style="stroke:#0078D4;stroke-width:3.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="450" y="493.0176">Update statistics</text><path d="M397,477.4844 L407,477.4844 C422,477.4844 422,487.2891 437,487.2891 L447,487.2891 " fill="none" style="stroke:#0078D4;stroke-width:3.0;"/><path d="M133,287.5117 L143,287.5117 C158,287.5117 158,477.4844 173,477.4844 L183,477.4844 " fill="none" style="stroke:#181818;stroke-width:3.0;"/><!--MD5=[3a3e364574b4437215fc9f840abb941c]
@startmindmap
<style>
title {
        FontSize 30
        FontColor #000000
    }
mindmapDiagram {
    :depth(0) {
        BackgroundColor #091f2c
        FontColor #ffffff
        LineThickness 3.0
    }
    .topic1 {
        BackgroundColor #ffb900
        LineColor #ffb900
        LineThickness 3.0
        FontColor #000000
    }
    .topic2 {
        BackgroundColor #f4364c
        LineColor #f4364c
        LineThickness 3.0
        FontColor #ffffff
    }
    .topic3 {
        BackgroundColor #c5b4e3
        LineColor #c5b4e3
        LineThickness 3.0
        FontColor #000000
    }
    .topic4 {
        BackgroundColor #e1d3c7
        LineColor #e1d3c7
        LineThickness 3.0
        FontColor #000000
    }
    .topic5 {
        BackgroundColor #07641d
        LineColor #07641d
        LineThickness 3.0
        FontColor #ffffff
    }
    .topic6 {
        BackgroundColor #0078d4
        LineColor #0078d4
        LineThickness 3.0
        FontColor #ffffff
    }
}
</style>
title [[https://learn.microsoft.com/training/modules/load-optimize-data-into-relational-data-warehouse Module]]: Load data into a relational data warehouse
+ Data warehouse
++ Load staging tables <<topic1>>
+++_ Creating staging tables
+++_ Using the COPY command
+++_ Using external tables
++ Load dimension tables  <<topic2>>
+++_ Using a CREATE TABLE AS (CTAS) statement
++++_ You can't use IDENTITY to generate a unique integer value for the surrogate key when using a CTAS statement. Use ROW_NUMBER() instead.
+++_ Using an INSERT statement
++ Load time dimension tables <<topic3>>
+++_ Generate a sequence of time dimension values based on a date grain.
+++_ Scripting this in SQL may be time-consuming
++ Load slowly changing dimensions <<topic4>>
+++_ Type 0 (data can't be changed)
+++_ Type 1 (in-place update)
+++_ Type 2 (updates are inserted as new rows)
+++_ Type 3 (add new attribute)
+++_ Type 4 (add history table)
+++_ Type 5 (add history table and new attribute)
+++_ Type 6 (combine type 1, 2 and 3)
+++_ Combining INSERT and UPDATE statements
+++_ Using a MERGE statement
++ Load fact tables  <<topic5>>
+++_ Load fact tables after dimension tables
++ Perform post load optimization <<topic6>>
+++_ Rebuild indexes
+++_ Update statistics
@endmindmap

PlantUML version 1.2022.7(Mon Aug 22 19:01:30 CEST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: en
Country: US
--></g></svg>